paths:
  /v1/users:
    get:
      summary: Retrieve all users
      description: Retrieve all users from the database
      tags:
        - Users
      security:
        - jwtAuth: [] # Assuming jwt authentication
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '409':
          description: No users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        

  /v1/users/{userId}:
    get:
      summary: Retrieve a user by ID
      description: Retrieve a user based on their unique ID
      tags:
        - Users
      security:
        - jwtAuth: [] # Assuming jwt authentication
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: No users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      summary: Update a user by ID
      description: Update a user's details based on their unique ID
      tags:
        - Users
      security:
        - jwtAuth: [] # Assuming jwt authentication
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to update
          schema:
            type: string
        - in: requestBody
          description: User object that needs to be updated
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '409':
          description: No users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      summary: Delete a user by ID
      description: Delete a user based on their unique ID
      tags:
        - Users
      security:
        - jwtAuth: [] # Assuming jwt authentication
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: No users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string